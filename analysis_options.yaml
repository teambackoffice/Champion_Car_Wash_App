# Champion Car Wash App - Performance-Focused Analysis Options
# This file configures the analyzer to detect common performance issues

include: package:flutter_lints/flutter.yaml

analyzer:
  exclude:
    - "**/*.g.dart"
    - "**/*.freezed.dart"
    - "**/generated/**"

  strong-mode:
    implicit-casts: false
    implicit-dynamic: false

  errors:
    # Treat performance-critical issues as errors
    missing_required_param: error
    missing_return: error
    invalid_override: error

    # Treat StatefulWidget disposal issues as errors
    cancel_subscriptions: error
    close_sinks: error

    # Performance warnings
    avoid_print: warning
    avoid_slow_async_io: warning
    avoid_type_to_string: warning

    # Treat unused code as warnings
    unused_import: warning
    unused_local_variable: warning
    unused_element: warning

linter:
  rules:
    # Performance-critical rules
    - avoid_print  # Use debugPrint or logging instead
    - avoid_slow_async_io  # Avoid synchronous File I/O
    - avoid_type_to_string  # Expensive runtime type checking
    - cancel_subscriptions  # Memory leak prevention
    - close_sinks  # Memory leak prevention
    - avoid_unnecessary_containers  # Widget tree optimization
    - sized_box_for_whitespace  # Use SizedBox instead of Container
    - use_key_in_widget_constructors  # Widget rebuild optimization

    # StatefulWidget disposal rules
    - no_logic_in_create_state  # Keep create state simple

    # Const constructor enforcement
    - prefer_const_constructors  # Reduce widget rebuilds
    - prefer_const_constructors_in_immutables  # Immutable widget optimization
    - prefer_const_declarations  # Compile-time constants
    - prefer_const_literals_to_create_immutables  # Const collections

    # Memory management
    - avoid_redundant_argument_values  # Reduce memory allocation
    - avoid_unnecessary_containers  # Widget tree efficiency
    - use_build_context_synchronously  # Async safety

    # Code quality (general)
    - always_declare_return_types
    - always_require_non_null_named_parameters
    - annotate_overrides
    - avoid_empty_else
    - avoid_init_to_null
    - avoid_null_checks_in_equality_operators
    - avoid_relative_lib_imports
    - avoid_return_types_on_setters
    - avoid_shadowing_type_parameters
    - avoid_types_as_parameter_names
    - camel_case_extensions
    - camel_case_types
    - curly_braces_in_flow_control_structures
    - empty_catches
    - empty_constructor_bodies
    - exhaustive_cases
    - file_names
    - hash_and_equals
    - implementation_imports
    - iterable_contains_unrelated_type
    - library_names
    - library_prefixes
    - list_remove_unrelated_type
    - no_duplicate_case_values
    - null_closures
    - overridden_fields
    - package_api_docs
    - package_names
    - package_prefixed_library_names
    - prefer_adjacent_string_concatenation
    - prefer_collection_literals
    - prefer_conditional_assignment
    - prefer_contains
    - prefer_equal_for_default_values
    - prefer_final_fields
    - prefer_for_elements_to_map_fromIterable
    - prefer_function_declarations_over_variables
    - prefer_if_null_operators
    - prefer_initializing_formals
    - prefer_inlined_adds
    - prefer_interpolation_to_compose_strings
    - prefer_is_empty
    - prefer_is_not_empty
    - prefer_iterable_whereType
    - prefer_null_aware_operators
    - prefer_single_quotes
    - prefer_spread_collections
    - prefer_typing_uninitialized_variables
    - provide_deprecation_message
    - recursive_getters
    - require_trailing_commas  # Better git diffs
    - slash_for_doc_comments
    - sort_child_properties_last
    - type_init_formals
    - unawaited_futures
    - unnecessary_brace_in_string_interps
    - unnecessary_const
    - unnecessary_getters_setters
    - unnecessary_new
    - unnecessary_null_aware_assignments
    - unnecessary_null_in_if_null_operators
    - unnecessary_overrides
    - unnecessary_parenthesis
    - unnecessary_string_escapes
    - unnecessary_string_interpolations
    - unnecessary_this
    - unrelated_type_equality_checks
    - use_full_hex_values_for_flutter_colors
    - use_function_type_syntax_for_parameters
    - use_rethrow_when_possible
    - valid_regexps
    - void_checks

# Performance Testing Configuration
# Custom rules and thresholds for Champion Car Wash app
performance_thresholds:
  startup_time_ms: 2000  # Max 2 seconds
  frame_skips_per_second: 5  # Max 5 dropped frames per second
  memory_usage_mb: 150  # Max 150MB memory usage
  api_response_time_ms: 1000  # Max 1 second API response
